{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/validate.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport cospi from '@stdlib/math-base-special-cospi';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a cosine wave.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a cosine wave repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterCosineWave( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 0.0\n*\n* v = iter.next().value;\n* // returns -1.0\n*\n* // ...\n*/\nfunction iterCosineWave( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t ϵ [0,τ]\n\t}\n\tt -= 1;\n\ts = 2.0 / opts.period;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\treturn {\n\t\t\t'value': opts.amplitude * cospi( s*t ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterCosineWave( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterCosineWave;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPlainObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport { isPrimitive as isNonNegativeNumber } from '@stdlib/assert-is-nonnegative-number';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a cosine wave repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( '0tF2V', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( '0tF8N', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( '0tF4k', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( '0tF8M', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( '0tF2t', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n"],"names":["iterCosineWave","options","opts","iter","FLG","err","t","s","i","period","amplitude","offset","arguments","length","isPlainObject","hasOwnProp","isPositiveInteger","TypeError","format","isNonNegativeNumber","isInteger","isNonNegativeInteger","validate","setReadOnly","done","value","cospi","iteratorSymbol"],"mappings":";;oiCA4DA,SAASA,EAAgBC,GACxB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAQJ,GANAN,EAAO,CACNO,OAAU,GACVC,UAAa,EACbC,OAAU,EACVR,KAAQ,OAEJS,UAAUC,SACdR,ECrBF,SAAmBH,EAAMD,GACxB,OAAMa,EAAeb,GAGhBc,EAAYd,EAAS,YACzBC,EAAKO,OAASR,EAAQQ,QAChBO,EAAmBf,EAAQQ,SACzB,IAAIQ,UAAWC,EAAQ,QAAS,SAAUjB,EAAQQ,SAGtDM,EAAYd,EAAS,eACzBC,EAAKQ,UAAYT,EAAQS,WACnBS,EAAqBlB,EAAQS,YAC3B,IAAIO,UAAWC,EAAQ,QAAS,YAAajB,EAAQS,YAGzDK,EAAYd,EAAS,YACzBC,EAAKS,OAASV,EAAQU,QAChBS,EAAWnB,EAAQU,SACjB,IAAIM,UAAWC,EAAQ,QAAS,SAAUjB,EAAQU,SAGtDI,EAAYd,EAAS,UACzBC,EAAKC,KAAOF,EAAQE,MACdkB,EAAsBpB,EAAQE,OAC5B,IAAIc,UAAWC,EAAQ,QAAS,OAAQjB,EAAQE,OAGlD,KA1BC,IAAIc,UAAWC,EAAQ,QAASjB,GA2BzC,CDRQqB,CAAUpB,EAAMD,GACjBI,GACJ,MAAMA,EAoBR,OAjBAC,GAAMJ,EAAKO,OAAOP,EAAKS,QAAWT,EAAKO,QAC9B,IACRH,GAAKJ,EAAKO,QAEXH,GAAK,EACLC,EAAI,EAAML,EAAKO,OACfD,EAAI,EAIJe,EADApB,EAAO,CAAA,EACY,QAenB,WAEC,GADAK,GAAK,EACAJ,GAAOI,EAAIN,EAAKC,KACpB,MAAO,CACNqB,MAAQ,GAKV,OAFAlB,GAAK,EAEE,CACNmB,MAASvB,EAAKQ,UAAYgB,EAAOnB,GAFlCD,GAAKJ,EAAKO,SAGTe,MAAQ,EAET,IA3BDD,EAAapB,EAAM,UAoCnB,SAAcsB,GAEb,GADArB,GAAM,EACDQ,UAAUC,OACd,MAAO,CACNY,MAASA,EACTD,MAAQ,GAGV,MAAO,CACNA,MAAQ,EAET,IA5CIG,GACJJ,EAAapB,EAAMwB,GAmDpB,WACC,OAAO3B,EAAgBE,EACvB,IAnDMC,CAoDR"}